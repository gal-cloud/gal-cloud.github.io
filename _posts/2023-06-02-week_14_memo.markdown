2023-06-02-"week_14_memo".markdown

모의 담금질 알고리즘

임의의 후보를 선택 후 이웃해의 적합도를 확인하여 더 우수한 해를 선택한다.

import java.util.*;
public class week_15_1 {
    // 초기온도 설정
    // 초기해 선택
    // costFunction 계산 <- f (후보해)
    // while (특정조건 만족해야지 -> 수렴)
    // for (n번 수행)
    // 이웃해 <- perturbation (섭동) <- 비트별 표현 1비트
    // costFunction 계산  <- f(이웃해)
    // d = f(이웃해) - f(후보해)
    // f(이웃해) 더 좋은 경우 (선택 : 후보해 <- 이웃해)
    // f(이웃해) 안좋은 경우
        // 그럼에도 불구하고 선택 (후보해 <-이웃해)
        // 그래서 선택 x (후보해 <- 후보해)
    // 초기온도 감소
    public static int fit (int x) {
        return -x*x + 38*x + 80;
    }
    private static int perturb (int x) {
        String str = String.format("%5s", Integer.toBinaryString(x).replaceAll(" ", "0"));
        Random r = new Random();
        int idx = r.nextInt(str.length());
        char[] tmp = str.toCharArray();
        tmp[idx] = (tmp[idx] == '0') ? '1' : '0';
        String y = new String(tmp);
        return Integer.parseInt(y, 2);
    }
    public static int annealing (int n, float a, float t0) {
        Random r = new Random();
        float t = t0;
        int x = r.nextInt(32);
        int prev = fit(x);
        for (int i=0 ; i < 100 ; i++) {
            for (int j=0 ; j < n ; j ++) {
                int tmp = perturb(fit(x));
                int curr = fit(tmp);
                int d = -(curr - prev);
                float p = r.nextFloat();
                if (p <= Math.exp((float)-d/t)) {
                        x = tmp;
                        prev = curr;
                }
            }
            t *= a;
        }
        return x;
    }
    public static void main(String[] args) {
        int x = annealing(1000, 0.9f, 100);
        System.out.println(x);
        System.out.println(fit(x));
//        perturb(19);
    }
}